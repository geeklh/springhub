<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.geekli.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.geekli.model.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="BIGINT" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="personalid" property="personalid" jdbcType="BIGINT" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="isvip" property="isvip" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, phone, email, personalid, address, isvip
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from usermessage
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from usermessage
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.geekli.model.User" >
    insert into usermessage (id, username, password, 
      phone, email, personalid, 
      address, isvip)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phone,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, #{personalid,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{isvip,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.geekli.model.User" >
    insert into usermessage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="personalid != null" >
        personalid,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="isvip != null" >
        isvip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=BIGINT},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="personalid != null" >
        #{personalid,jdbcType=BIGINT},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="isvip != null" >
        #{isvip,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.geekli.model.User" >
    update usermessage
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=BIGINT},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="personalid != null" >
        personalid = #{personalid,jdbcType=BIGINT},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="isvip != null" >
        isvip = #{isvip,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.geekli.model.User" >
    update usermessage
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=BIGINT},
      email = #{email,jdbcType=VARCHAR},
      personalid = #{personalid,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      isvip = #{isvip,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>